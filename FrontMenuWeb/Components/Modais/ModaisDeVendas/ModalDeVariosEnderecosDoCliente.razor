@using FrontMenuWeb.Models.Pessoas
@using FrontMenuWeb.Services.ServicosDeTerceiros

<MudDialog OnKeyDown="OnKeyDownAsync">
    <DialogContent>
        <MudText>Selecione o endereço desejado!</MudText>
        <MudFocusTrap DefaultFocus="DefaultFocus.FirstChild">

            <MudSelect @ref=SelectDeEnderecos T="EnderecoPessoa" Label="Selecione um endereço" @bind-Value="_selectedEndereco">
                @foreach (var item in Enderecos)
                {
                    <MudSelectItem Value="@item">@($"{item.Rua} - {item.Bairro}, {item.Numero}")</MudSelectItem>
                }
            </MudSelect>

            @if (_selectedEndereco is not null)
            {
                <MudText>Endereço selecionado: <b>@_selectedEndereco.Rua</b>, @_selectedEndereco.Bairro - @_selectedEndereco.Numero</MudText>
            }

        </MudFocusTrap>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancelar</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">OK</MudButton>
    </DialogActions>
</MudDialog>



@code {

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    private EnderecoPessoa? _selectedEndereco;
    private MudSelect<EnderecoPessoa> SelectDeEnderecos;

    [Parameter]
    public List<EnderecoPessoa> Enderecos { get; set; } = new List<EnderecoPessoa>();

    private string _returnValue;


    private void Submit() => MudDialog.Close(DialogResult.Ok(_selectedEndereco));

    private void Cancel() => MudDialog.Cancel();

    private async Task OnKeyDownAsync(KeyboardEventArgs args)
    {
        switch (args.Key)
        {
            case "Enter":
                Submit();
                break;
            case "NumpadEnter":
                Submit();
                break;
        }
    }

}
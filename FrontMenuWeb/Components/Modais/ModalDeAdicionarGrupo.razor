@rendermode RenderMode.InteractiveWebAssembly
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudDialog class="rounded-3 w-50" style="background-color: #101628; color: #ffff">
    <DialogContent>

        <MudForm class="" Spacing="5" @onsubmit="Submit">
            @if (UltimoGrupo.CodigoInterno is not null)
            {
                <MudTextField T="string"
                              Label="Descrição do Grupo"
                              Value="@NovoGrupo.Descricao"
                              ValueChanged="OnDescricaoChanged"
                              Immediate="true"
                              Required
                              @ref="_descricaoRef"
                              Style="text-transform: uppercase;" />
                <MudTextField T="string" @bind-Value=NovoGrupo.CodigoInterno Label="Codigo interno" Required />
            }
            <div>
                <MudText>Ultilizar Carro Chefe?</MudText>
                <div class="d-flex">

                    <MudRadioGroup T="string">
                        <MudRadio Value="@("Personal")">Sim</MudRadio>
                        <MudRadio Value="@("Professional")">Não</MudRadio>
                    </MudRadioGroup>
                </div>
                @if (ErroAoAdicionarGrupo)
                {
                    <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Class="mt-2">
                        Verifique todos os campos e tente novamente.
                    </MudAlert>
                }
            </div>
        </MudForm>


    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancelar">Cancelar</MudButton>
        <MudButton style="color: #F88113" OnClick="Submit">Adicionar</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    private MudTextField<string> _descricaoRef;

    [Parameter]
    public List<ClsGrupo> Grupos { get; set; }

    ClsGrupo UltimoGrupo = new ClsGrupo();
    ClsGrupo NovoGrupo = new ClsGrupo();
    private bool ErroAoAdicionarGrupo = false;

    protected override async Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient("ApiAutorizada");


        if (Grupos is not null)
        {
            UltimoGrupo = Grupos.OrderByDescending(g => g.Id).FirstOrDefault() ?? new ClsGrupo();
            NovoGrupo.CodigoInterno = int.TryParse(UltimoGrupo.CodigoInterno, out int codigo) ? (codigo + 1).ToString().PadLeft(4, '0') : "0001";
        }
    }

    private void OnDescricaoChanged(string val)
    {
        NovoGrupo.Descricao = val?.ToUpperInvariant();
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (NovoGrupo?.CodigoInterno is not null)
        {
            await _descricaoRef.FocusAsync();
        }
    }

    private async Task Submit()
    {
        var client = HttpClientFactory.CreateClient("ApiAutorizada");

        if (NovoGrupo.Descricao is not null && NovoGrupo.CodigoInterno is not null)
        {
            NovoGrupo.Descricao = NovoGrupo.Descricao.ToUpperInvariant().Trim();
            var response = await client.PostAsJsonAsync("grupos/create", NovoGrupo);
            if (!response.IsSuccessStatusCode)
            {
                ErroAoAdicionarGrupo = true;
            }

            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            ErroAoAdicionarGrupo = true;
        }


    }

    private void Cancelar() => MudDialog.Cancel();
}
@rendermode RenderMode.InteractiveWebAssembly
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using FrontMenuWeb.Models.Financeiro
@using FrontMenuWeb.Services
@using FrontMenuWeb.Services.FinanceroServices
@using System.Globalization
@inject ContasService ContaService


<MudPaper Square="false" Elevation="0">
    <MudDialog class="rounded-3 w-100" style="background-color: var(--mud-palette-surface);">
        <DialogContent>

            <MudForm @onkeydown="HandleKeyDown" class="" Spacing="5" @onsubmit="Submit">
                <MudFocusTrap DefaultFocus="DefaultFocus.FirstChild">
                    <MudStack Class="w-100" Row=true Justify="Justify.SpaceAround">

                        <MudTextField Immediate="true" T="string" TextChanged="DefineCodigoDoBancoDinamicamente"
                                       Class="w-75" Label="Nome Do Banco" Variant="Variant.Filled" @bind-Value=@NovaConta.NomeConta />

                        <MudSelect T="int" Class="w-25" @bind-Value=@NovaConta.CodIconeDoBanco Label="Banco" Variant="Variant.Filled">
                            @*Bradesco*@
                            <MudSelectItem Value="1">
                                <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                                    <img src="@AppState.GetBancoIcon(1)" alt="Bradesco" width="24" height="24" />
                                    <span>Bradesco</span>
                                </MudStack>
                            </MudSelectItem>

                            @*Banco Do Brasil*@
                            <MudSelectItem Value="2">
                                <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                                    <img src="@AppState.GetBancoIcon(2)" alt="Banco do Brasil" width="24" height="24" />
                                    <span>Banco Do Brasil</span>
                                </MudStack>
                            </MudSelectItem>

                            @*Sicob*@
                            <MudSelectItem Value="3">
                                <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                                    <img src="@AppState.GetBancoIcon(3)" alt="Sicob" width="24" height="24" />
                                    <span>Sicob</span>
                                </MudStack>
                            </MudSelectItem>

                            @*Itau*@
                            <MudSelectItem Value="4">
                                <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                                    <img src="@AppState.GetBancoIcon(4)" alt="Itau" width="24" height="24" />
                                    <span>Itau</span>
                                </MudStack>
                            </MudSelectItem>

                            @*Outros*@
                            <MudSelectItem Value="0">
                                <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                                    <img src="@AppState.GetBancoIcon(0)" alt="Outros" width="24" height="24" />
                                    <span>Outros</span>
                                </MudStack>
                            </MudSelectItem>



                        </MudSelect>
                    </MudStack>

                    <MudStack Class="w-100" Row=true AlignItems="AlignItems.Center" Justify="Justify.SpaceAround">
                        <MudNumericField Class="w-75"
                                         Immediate="false"
                                         Label="Saldo Inicial"
                                         Variant="Variant.Outlined"
                                         Format="N2"
                                         Culture="_pt"
                                         T="float"
                                         HideSpinButtons="true"
                                         @bind-Value=@NovaConta.SaldoInicial />
                        <MudTooltip Text="Clique para ativar/desativar a conta" Color="Color.Primary">
                            <MudSwitch Class="w-25" T="bool" Value=@NovaConta.Ativo Color="Color.Success" ValueChanged="@(async valor => { NovaConta.Ativo = valor; })" />
                        </MudTooltip>
                    </MudStack>


                    <div>
                        @if (ErroAoAdicionarConta)
                        {
                            <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Class="mt-2">
                                @MensagemDeErro
                            </MudAlert>
                        }
                    </div>
                </MudFocusTrap>
            </MudForm>


        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancelar">Cancelar</MudButton>
            <MudButton style="color: #F88113" OnClick="Submit">Adicionar</MudButton>
        </DialogActions>
    </MudDialog>
</MudPaper>


@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    private MudTextField<string> _descricaoRef;
    private bool ErroAoAdicionarConta = false;
    private string MensagemDeErro = "Erro ao adicionar a conta. Verifique os dados e tente novamente.";
    private ClsConta NovaConta = new ClsConta();
    public CultureInfo _pt = CultureInfo.GetCultureInfo("pt-BR");

    private async Task Submit()
    {
        try
        {
           RetornoApiContas Response =  await ContaService.AdicionaContaAsync(NovaConta);

            if (Response.Status == "success")
            {
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                string mensagemDeErro = string.Join(", ", Response.Messages);

                ErroAoAdicionarConta = true;
                MensagemDeErro = mensagemDeErro;
                Snackbar.Add(MensagemDeErro, Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao adicionar conta: {ex.Message}", Severity.Error);
        }

    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await Submit();
        }
    }

    private void Cancelar()
    {
        MudDialog.Cancel();
    }

    private void DefineCodigoDoBancoDinamicamente(string NomeEscrito)
    {

        if (NomeEscrito.Contains("bradesco", StringComparison.OrdinalIgnoreCase))
            NovaConta.CodIconeDoBanco = 1;
        else if (NomeEscrito.Contains("banco do brasil", StringComparison.OrdinalIgnoreCase) || NomeEscrito.Contains("bb", StringComparison.OrdinalIgnoreCase))
            NovaConta.CodIconeDoBanco = 2;
        else if (NomeEscrito.Contains("sicob", StringComparison.OrdinalIgnoreCase))
            NovaConta.CodIconeDoBanco = 3;
        else if (NomeEscrito.Contains("itau", StringComparison.OrdinalIgnoreCase))
            NovaConta.CodIconeDoBanco = 4;
        else
            NovaConta.CodIconeDoBanco = 0;
    }

}

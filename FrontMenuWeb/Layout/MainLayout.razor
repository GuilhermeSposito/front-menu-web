@using MudBlazor;

@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <AuthorizeView>
        <Authorized>
            <MudAppBar style="background-color: #F88113; color: #ffff" Elevation="1">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
                <MudText Typo="Typo.h5" Class="ml-3">@ProgramName</MudText>
                <MudSpacer />
                @*<MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />*@ 
            </MudAppBar>

            <MudDrawer Style="background-color: #101628" id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
                <MudNavMenu >
                    <MudDivider Class="my-2" />
                    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Inicio</MudNavLink>
                    <MudNavLink Href="claims" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Group">Claims</MudNavLink>
                    <MudNavGroup Title="Produtos" Icon="@Icons.Material.Filled.Inventory" Expanded="false">
                        <MudNavLink Icon="@Icons.Material.Filled.Category" Href="/grupos">Grupos</MudNavLink>
                        <MudNavLink Icon="@Icons.Material.Filled.Inventory"  Href="/produtos">Produtos</MudNavLink>
                    </MudNavGroup>
                    <MudNavLink Href="/login" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Person">Clientes</MudNavLink>
                    <MudNavLink @onclick="Logout" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ExitToApp">Sair</MudNavLink>
                </MudNavMenu>
            </MudDrawer>
        </Authorized>

    </AuthorizeView>

    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;
    private bool _open = false;
    private bool _dense = false;
    private Breakpoint _breakpoint = Breakpoint.Lg;
    private DrawerClipMode _clipMode = DrawerClipMode.Never;
    private string ProgramName = "Sophos Menu";



    private void ToggleDrawer()
    {
        _open = !_open;

    }
    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
            {
                PaletteLight = _lightPalette,
                PaletteDark = _darkPalette,
                LayoutProperties = new LayoutProperties()
            };
    }

    public async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");

        if (AuthStateProvider is CustomAuthStateProvider customAuthProvider)
        {
            customAuthProvider.NotifyAuthenticationStateChanged();
        }

        Navigation.NavigateTo("/login", forceLoad: true);
    }


    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
        {
            Black = "#110e2d",
            AppbarText = "#424242",
            AppbarBackground = "rgba(255,255,255,0.8)",
            DrawerBackground = "#ffffff",
            GrayLight = "#e8e8e8",
            GrayLighter = "#f9f9f9",
        };

    private readonly PaletteDark _darkPalette = new()
        {
            Primary = "#F88113",
            Surface = "#101628",
            Background = "#192436",
            BackgroundGray = "#151521",
            AppbarText = "#92929f",
            AppbarBackground = "rgba(26,26,39,0.8)",
            DrawerBackground = "#1a1a27",
            ActionDefault = "#74718e",
            ActionDisabled = "#9999994d",
            ActionDisabledBackground = "#605f6d4d",
            TextPrimary = "#b2b0bf",
            TextSecondary = "#92929f",
            TextDisabled = "#ffffff33",
            DrawerIcon = "#92929f",
            DrawerText = "#92929f",
            GrayLight = "#2a2833",
            GrayLighter = "#1e1e2d",
            Info = "#4a86ff",
            Success = "#3dcb6c",
            Warning = "#ffb545",
            Error = "#ff3f5f",
            LinesDefault = "#33323e",
            TableLines = "#33323e",
            Divider = "#292838",
            OverlayLight = "#1e1e2d80",
        };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };

}


